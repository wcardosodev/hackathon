[{"/Users/jordandey/sandbox/hackathon/hackathon/src/index.js":"1","/Users/jordandey/sandbox/hackathon/hackathon/src/App.js":"2","/Users/jordandey/sandbox/hackathon/hackathon/src/whatever.js":"3","/Users/jordandey/sandbox/hackathon/hackathon/src/Header.js":"4"},{"size":197,"mtime":1608136444711,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608142922767,"results":"7","hashOfConfig":"6"},{"size":3472,"mtime":1608142922768,"results":"8","hashOfConfig":"6"},{"size":670,"mtime":1608138416909,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2e5ny1",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jordandey/sandbox/hackathon/hackathon/src/index.js",[],"/Users/jordandey/sandbox/hackathon/hackathon/src/App.js",[],"/Users/jordandey/sandbox/hackathon/hackathon/src/whatever.js",["19","20","21"],"import React, { useState, useEffect } from 'react';\nimport * as THREE from 'three';\n\nimport './css/video-with-overlay.css';\nimport MatchVideo from './media/video/first_vid.mp4';\n\nconst MyComponent = () => {\n  const [defensiveLinePts, setDefensiveLinePts] = useState([]);\n\n  const data = {\n    events: [{}],\n    player_positions: [{}],\n  };\n\n  useEffect(() => {\n    const width = 1280;\n    const height = 720;\n    const aspect = width / height;\n    const viewAngle = 45; // Higher = closer, essentially zoom\n    const near = 0.1;\n    const far = 1000;\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      preserveDrawingBuffer: true,\n    });\n    renderer.setSize(width, height);\n    document\n      .getElementById('video-with-overlay')\n      .appendChild(renderer.domElement)\n      .setAttribute('id', 'canvas-overlay');\n\n    const camera = new THREE.PerspectiveCamera(viewAngle, aspect, near, far);\n    camera.position.set(0, 0, 100);\n    camera.lookAt(0, 0, 0);\n\n    const scene = new THREE.Scene();\n\n    const material = new THREE.LineBasicMaterial({ color: 'white' });\n\n    // 0, 0, 0 is center of the scene, for Vector3s\n    const points = [];\n    points.push(new THREE.Vector3(-73.5, -5, 0));\n    points.push(new THREE.Vector3(0, -41.5, 0));\n    points.push(new THREE.Vector3(0, 10, 0));\n    points.push(new THREE.Vector3(0, 41.5, 0));\n    points.push(new THREE.Vector3(73.5, 5, 0));\n\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\n    const line = new THREE.Line(geometry, material);\n\n    scene.add(line);\n\n    const axesHelper = new THREE.AxesHelper(10);\n    scene.add(axesHelper);\n\n    renderer.render(scene, camera);\n  });\n\n  // document.getElementById('video').addEventListener(\n  //   'loadedmetadata',\n  //   function () {\n  //     this.currentTime = 50;\n  //   },\n  //   false\n  // );\n\n  const loadEvent = (eventObj) => {\n    // events as list\n    // click on event\n\n    // goes to video at time of event\n    const video = document.getElementById('video');\n    video.currentTime = eventObj.event_time; // event.time\n    video.play(); // plays then pauses due to needing to rerender image\n    video.pause();\n\n    // then adds new vector line\n    // setDefensiveLinePts()\n  };\n\n  return (\n    <>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"column is-three-quarters\">\n            <div id=\"video-with-overlay\">\n              <video\n                id=\"video\"\n                controls\n                // autoPlay\n                muted\n                src={MatchVideo}\n                type=\"video/mp4\"\n              />\n            </div>\n          </div>\n          <div className=\"column is-one-quarter\">\n            <button\n              className=\"loadButton\"\n              onClick={() => loadEvent({ event_time: 75 })}\n            >\n              Load Event\n            </button>\n            {\n              //event list to select\n            }\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default MyComponent;\n\n// {\n//   events: [\n//     {\n//       event_id: 123,\n//       ...otherproperties\n//     }\n//   ],\n//   player_positions_based_on_events: [\n//     {\n//       event_id: 123,\n//       players: [\n//         {\n//           player_id: 1,\n//           x_pos: 23,\n//           y_pos: 25\n//         },\n//         {\n//           player_id: 2,\n//           x_pos: 32,\n//           y_pos: 23\n//         }\n//       ]\n//     }\n//   ]\n// }\n","/Users/jordandey/sandbox/hackathon/hackathon/src/Header.js",[],{"ruleId":"22","severity":1,"message":"23","line":8,"column":10,"nodeType":"24","messageId":"25","endLine":8,"endColumn":26},{"ruleId":"22","severity":1,"message":"26","line":8,"column":28,"nodeType":"24","messageId":"25","endLine":8,"endColumn":47},{"ruleId":"22","severity":1,"message":"27","line":10,"column":9,"nodeType":"24","messageId":"25","endLine":10,"endColumn":13},"no-unused-vars","'defensiveLinePts' is assigned a value but never used.","Identifier","unusedVar","'setDefensiveLinePts' is assigned a value but never used.","'data' is assigned a value but never used."]
